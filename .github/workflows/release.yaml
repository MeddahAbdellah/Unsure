name: Release on Version Change

on:
  push:
    paths:
      - "package.json"

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Check for version change
        id: version_check
        run: |
          echo "PACKAGE_VERSION=$(jq -r '.version' package.json)" >> $GITHUB_ENV
          echo "PACKAGE_VERSION=$PACKAGE_VERSION"
          git fetch --depth=1 origin main:refs/remotes/origin/main
          PREVIOUS_VERSION=$(git show origin/main:package.json | jq -r '.version')
          echo "PREVIOUS_VERSION=$PREVIOUS_VERSION"
          if [ "$PACKAGE_VERSION" == "$PREVIOUS_VERSION" ]; then
            echo "Version has not changed. Exiting..."
            exit 1
          fi

      - name: Generate changelog
        id: changelog
        run: |
          echo "Generating changelog..."
          git log --pretty=format:"%h - %s" origin/main...HEAD > changelog.txt
          echo "CHANGELOG=$(cat changelog.txt)" >> $GITHUB_ENV

      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.PACKAGE_VERSION }}
          release_name: v${{ env.PACKAGE_VERSION }}
          body: ${{ env.CHANGELOG }}
          draft: false
          prerelease: false

      - name: Upload assets to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist
          asset_name: dist.zip
          asset_content_type: application/zip
